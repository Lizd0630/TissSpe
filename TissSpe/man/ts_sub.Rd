% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_sub.R
\name{ts_sub}
\alias{ts_sub}
\title{tissue-specific gene subset}
\usage{
ts_sub(lst, Ib = 1, specificity = c(0, 1), ts_method = "Tau",
  subtissues)
}
\arguments{
\item{lst}{List of 3 data.frame. one of them contains raw values(or psi values
with their specificty values of 9 methods: "Tau", "Gini", "Tsi", "Counts", "Ee",
"Pem", "Hg", "Z", "Spm"(named "raw"), the second contains rank values and binary
index(named "rank"), the third contains binary pattern values and index binary "Ib"
(named "bin"), which were generated from \code{ts_psi} or \code{ts_expr}.}

\item{Ib}{Integer. Binary index, and is the length of \code{subtissues}.}

\item{specificity}{Vector of range, numeric. Region of specificity. Default
\code{c(0, 1)}.}

\item{ts_method}{Specificity methods. "Tau", "Gini", "TSI", "Counts", "EE",
"Hg", "Zscore", "Spm" or "Pem".}

\item{subtissues}{Charactor, vector. Of binary pattern, only tissues in
\code{subtissues} have value 1, that is specific-overexpression.}
}
\value{
a list with 3 data.frames. Subset of \code{lst}.
}
\description{
Function to get a gene subset accroding to specified \code{Ib} and
\code{subtissues}. The input of data is from \code{ts_psi} or \code{ts_expr}.
}
\examples{
res1 <- ts_expr(demo_tpm, n = 11,
        tissues = c("sample_A", "sample_B", "sample_C", "sample_D",
                   "sample_E", "sample_F", "sample_G", "sample_H",
                   "sample_I", "sample_J", "sample_K", "sample_L",
                   "sample_M", "sample_N", "sample_O", "sample_P"),
                   identifier = "gene_id")
ts_sub(res1, Ib=2, subtissues=c("sample_A", "sample_B"))
ts_sub(res1, Ib=3, specificity = c(0, 1),
       subtissues = c("sample_A", "sample_B", "sample_C"))
res2 <- ts_psi(demo_psi,
        tissues = c("sample_A", "sample_B", "sample_C", "sample_D",
                   "sample_E", "sample_F", "sample_G", "sample_H",
                   "sample_I", "sample_J", "sample_K", "sample_L",
                   "sample_M", "sample_N", "sample_O", "sample_P"),
                   identifier = "AS_events")
ts_sub(res2, Ib=2, subtissues=c("sample_A", "sample_B"))
ts_sub(res2, Ib=3, specificity = c(0.8, 1),
       subtissues = c("sample_A", "sample_B", "sample_C"))
}
